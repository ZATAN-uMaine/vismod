map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

upstream grafana {
  server localhost:3000;
}

upstream flask {
  server localhost:5000;
}

server {
  server_name {{ www_location }};

  index index.html;

  # requests to the Python flask service
  location / {
    proxy_pass http://flask;
  }

  # requests to the Grafana service
  location /grafana {
    proxy_set_header Host $http_host;
    proxy_pass http://grafana;
  }
  # Proxy Grafana Live WebSocket connections.
  location /grafana/api/live/ {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $http_host;
    proxy_pass http://grafana;
  }

  # log nginx errors to journalctl
  error_log syslog:server=unix:/dev/log;

  # Obtain these certificates with certbot certonly --nginx --cert-name mydomain.nz
  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/{{ www_location }}/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/{{ www_location }}}/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}


# HTTPS redirect
server {
  server_name {{ www_location }};

  listen 80;
  listen [::]:80;

  return 301 https://$host$request_uri;
}
